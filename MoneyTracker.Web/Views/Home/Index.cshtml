@model MoneyTracker.Domain.ReadModel.BalanceDetailsDto

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-12 col-sm-12">
        <h3>Purchases</h3>
    </div>
</div>

@foreach (var purchase in Model.Purchases.OrderByDescending(x => x.SpentAt))
{
    <div class="row">
        <div class="col-md-1 col-sm-2">
            <a asp-action="Update" asp-controller="Purchase" asp-route-purchaseId="@purchase.PurchaseId">
                <b class="glyphicon glyphicon-edit"></b>
                Edit
            </a>
        </div>
        <div class="col-md-2 col-sm-2">
            <p>@purchase.SpentAt.AsFormatted()</p>
        </div>
        <div class="col-md-2 col-sm-2">
            <p>@purchase.Amount @purchase.Currency</p>
        </div>
        <div class="col-md-6 col-sm-6">
            @foreach (var item in purchase.Purchases)
            {
                <p>@item.Title @(item.Amount - item.Discount) @purchase.Currency</p>
            }
        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <a asp-controller="Purchase" asp-action="Create" class="btn btn-link">Add purchase</a>
    </div>
</div>

<h3>Salaries</h3>

@foreach (var salary in Model.Salaries.OrderByDescending(x => x.ReceivedAt))
{
    <div class="row">
        <div class="col-md-3">
            <p>@salary.ReceivedAt.AsFormatted()</p>
        </div>
        <div class="col-md-4">
            <p>@salary.Amount @salary.Currency</p>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <a asp-controller="Salary" asp-action="AddSalary" class="btn btn-link">Add salary</a>
    </div>
</div>
